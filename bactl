#!/bin/sh
#
# BlackArch Linux Controller Script
#
# Checks environment and does necessary setups.


SUCCESS=0
FAILURE=1

VERBOSE='/dev/null'

# setup qemu-kvm related things
setup_qemu()
{
  return $SUCCESS
}

# setup VMware related things
setup_vmware()
{
  pacman -Syy --needed open-vm-tools > $VERBOSE 2>&1

  systemctl enable vmware-vmblock-fuse > $VERBOSE 2>&1
  systemctl enable vmtoolsd > $VERBOSE 2>&1
  systemctl start vmware-vmblock-fuse > $VERBOSE 2>&1
  systemctl start vmtoolsd > $VERBOSE 2>&1

  return $SUCCESS
}

# setup VirtualBox related things
setup_vbox()
{
  pacman -Syy --needed virtualbox-guest-utils virtualbox-guest-modules-arch > \
    $VERBOSE 2>&1

  systemctl enable vboxservice > $VERBOSE 2>&1
  systemctl start vboxservice > $VERBOSE 2>&1

  return $SUCCESS
}

# are we in a VM? if so, make necessary setups
check_vm_env()
{
  env=$(dmesg |egrep -io 'virtualbox|vmware|qemu' | sort -u)

  if [[ "$env" == *"VirtualBox"* ]]
  then
    setup_vbox
  elif [[ "$env" == "VMware" ]]
  then
    setup_vmware
  elif [[ "$env" == *"QEMU"* ]]
  then
    setup_qemu
  fi

  return $SUCCESS
}

setup_msf_env()
{
  pacman -Syy --needed metasploit postgresql postgresql-libs > \
    $VERBOSE 2>&1

  MSFPASS="msf"
  MSFUSER="msf"
  MSFDB="msf"
  MSFCONFIG="/opt/metasploit/config/database.yml"
  POSTGRESDIR="/var/lib/postgres"

  sudo -u postgres sh -c "initdb --locale en_US.UTF-8 -D '$POSTGRESDIR/data'" > \
    $VERBOSE 2>&1

  systemctl start postgresql > $VERBOSE 2>&1

  systemctl enable postgresql > $VERBOSE 2>&1

  sudo -u postgres psql postgres -c "create role $MSFUSER login password '$MSFPASS'" > \
    $VERBOSE 2>&1

  sudo -u postgres psql postgres -c "CREATE DATABASE $MSFDB OWNER $MSFUSER;" > \
    $VERBOSE 2>&1

  cat > $MSFCONFIG << EOF
production:
  adapter: postgresql
  database: $MSFDB
  username: $MSFUSER
  password: $MSFPASS
  host: 127.0.0.1
  port: 5432
  pool: 5
  timeout: 5
EOF

  echo "export MSF_DATABASE_CONFIG=$MSFCONFIG" >> /etc/profile.d/metasploit.sh
  source /etc/profile
  return $SUCCESS
}

# controller
main()
{
  check_vm_env
  setup_msf_env

  return $SUCCESS
}

# we start here
main
